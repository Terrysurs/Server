name: End-to-End Tests
on:
  workflow_dispatch:
  pull_request:
concurrency: build-wsl
jobs:
  start_vm:
    strategy:
      max-parallel: 1
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_VM_CREDS }}
      - name: Start the Runner
        run: |
          az vm start --name wsl-ci --resource-group wsl
  e2e:
    strategy:
      max-parallel: 1
    needs: start_vm
    runs-on: self-hosted
    env:
      rootfs64: 'http://cloud-images.ubuntu.com/wsl/kinetic/current/ubuntu-kinetic-wsl-amd64-wsl.rootfs.tar.gz'
      distroName: "Ubuntu-Preview"
      appID: "UbuntuPreview"
      launcher: "ubuntupreview.exe"
      goversion: "1.18"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup MSBuild (PATH)
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install certificate
        shell: powershell
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CERTIFICATE }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx

          $pwd = ConvertTo-SecureString  '${{ secrets.CERTIFICATE_PASSWORD }}' -AsPlainText -Force
          Import-PfxCertificate -Password $pwd -CertStoreLocation Cert:LocalMachine\Trust -FilePath certificate\certificate.pfx
          Import-PfxCertificate -Password $pwd -CertStoreLocation Cert:CurrentUser\My -FilePath certificate\certificate.pfx
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.goversion }}
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Build and install the appxbundle for testing
        shell: powershell
        run: |
          # If there is any leftovers from a previous run.
          $package=$(Get-AppxPackage | Where-Object PackageFullName -like *${{ env.appID }}*)
          If ( $package -ne $null -And $package -ne '' ) {
            Remove-AppxPackage $package
          }
          .\e2e\pre-e2e-testing.ps1 -AppID ${{ env.appID }} -RootfsX64 ${{ env.rootfs64 }}
      - name: Run tests
        shell: powershell
        run: |
          # Only 'TestBasicSetup()' seems mature enough to run in the CI so far.
          c:\sysinternalssuite\psexec.exe -nobanner -accepteula -w $PWD.Path -s -i 1 powershell.exe -Command `
            "&{ `$env:WSL_UTF8=1`; wsl.exe --version; wsl.exe --list --online;} 3>&1 2>&1 > .\test.log"		  

          Get-Content ".\test.log"
      - name: Remove the installed package
        if: always()
        shell: powershell
        run: |
          Remove-AppxPackage "$(Get-AppxPackage | Where-Object PackageFullName -like *${{ env.appID }}*)"


  deallocate_vm:
    strategy:
      max-parallel: 1
    needs: e2e
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_VM_CREDS }}
      - name: Deallocate the Runner
        run: |
          az vm deallocate --name wsl-ci --resource-group wsl
