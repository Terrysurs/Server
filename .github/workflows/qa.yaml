name: QA - Lint C++ Sources
on:
  push:
    branches:
    - main
  pull_request:
concurrency: quality

env:
  pull_request_id: ${{ github.event.pull_request.number }}
  INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
jobs:
  quality:
    name: Lint C++ sources with LLVM
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: microsoft/setup-msbuild@v1.0.2
      # Ensures compilation of message resources before clang-tidy. Also fails fast.
      - name: Run tests
        shell: powershell
        run: |
          msbuild -p:Platform=x64 -p:Configuration=Debug -p:RestorePackagesConfig=true -t:restore .\DistroLauncher-Tests\DistroLauncher-Tests.sln
          msbuild -p:Platform=x64 -p:Configuration=Debug .\DistroLauncher-Tests\DistroLauncher-Tests.sln
          .\DistroLauncher-Tests\x64\Debug\DistroLauncher-Tests.exe
      # Produces the fixes.yaml to be consumed by the commenter.
      - name: Run Clang-Tidy.
        shell: powershell
        run: | 
          copy .github\workflows\clang_lint\msbuild\Directory.Build.props DistroLauncher\
          msbuild -p:Platform=x64 -p:Configuration=Debug -t:ClangTidy
      # Runs clang-format, but expects clang-tidy to have already ran and produced the fixes.yaml.
      # This piece is meant to be cross-platform to enable maximum future reuse. That's why bash.
      - name: Lint with Clang tools
        shell: bash
        run: |
          chmod +x .github/workflows/clang_lint/entrypoint.sh
          .github/workflows/clang_lint/entrypoint.sh

